"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.verifyRevocation = void 0;
const types_1 = require("../types");
const verifyRevocation = (vpToken, revocationVerificationCallback, revocationVerification) => __awaiter(void 0, void 0, void 0, function* () {
    if (!vpToken) {
        throw new Error(`VP token not provided`);
    }
    if (!revocationVerificationCallback) {
        throw new Error(`Revocation callback not provided`);
    }
    const vcs = Array.isArray(vpToken.presentation.verifiableCredential)
        ? vpToken.presentation.verifiableCredential
        : [vpToken.presentation.verifiableCredential];
    for (const vc of vcs) {
        if (revocationVerification === types_1.RevocationVerification.ALWAYS ||
            (revocationVerification === types_1.RevocationVerification.IF_PRESENT && vc.credential.credentialStatus)) {
            const result = yield revocationVerificationCallback(vc.original, vc.format.toLowerCase().includes('jwt') ? types_1.VerifiableCredentialTypeFormat.JWT_VC : types_1.VerifiableCredentialTypeFormat.LDP_VC);
            if (result.status === types_1.RevocationStatus.INVALID) {
                throw new Error(`Revocation invalid for vc: ${vc.credential.id}. Error: ${result.error}`);
            }
        }
    }
});
exports.verifyRevocation = verifyRevocation;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUmV2b2NhdGlvbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9oZWxwZXJzL1Jldm9jYXRpb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBRUEsb0NBQW9JO0FBRTdILE1BQU0sZ0JBQWdCLEdBQUcsQ0FDOUIsT0FBc0MsRUFDdEMsOEJBQThELEVBQzlELHNCQUE4QyxFQUMvQixFQUFFO0lBQ2pCLElBQUksQ0FBQyxPQUFPLEVBQUU7UUFDWixNQUFNLElBQUksS0FBSyxDQUFDLHVCQUF1QixDQUFDLENBQUM7S0FDMUM7SUFDRCxJQUFJLENBQUMsOEJBQThCLEVBQUU7UUFDbkMsTUFBTSxJQUFJLEtBQUssQ0FBQyxrQ0FBa0MsQ0FBQyxDQUFDO0tBQ3JEO0lBRUQsTUFBTSxHQUFHLEdBQUcsS0FBSyxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDLG9CQUFvQixDQUFDO1FBQ2xFLENBQUMsQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDLG9CQUFvQjtRQUMzQyxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDLG9CQUFvQixDQUFDLENBQUM7SUFDaEQsS0FBSyxNQUFNLEVBQUUsSUFBSSxHQUFHLEVBQUU7UUFDcEIsSUFDRSxzQkFBc0IsS0FBSyw4QkFBc0IsQ0FBQyxNQUFNO1lBQ3hELENBQUMsc0JBQXNCLEtBQUssOEJBQXNCLENBQUMsVUFBVSxJQUFJLEVBQUUsQ0FBQyxVQUFVLENBQUMsZ0JBQWdCLENBQUMsRUFDaEc7WUFDQSxNQUFNLE1BQU0sR0FBRyxNQUFNLDhCQUE4QixDQUNqRCxFQUFFLENBQUMsUUFBbUMsRUFDdEMsRUFBRSxDQUFDLE1BQU0sQ0FBQyxXQUFXLEVBQUUsQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLHNDQUE4QixDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsc0NBQThCLENBQUMsTUFBTSxDQUN4SCxDQUFDO1lBQ0YsSUFBSSxNQUFNLENBQUMsTUFBTSxLQUFLLHdCQUFnQixDQUFDLE9BQU8sRUFBRTtnQkFDOUMsTUFBTSxJQUFJLEtBQUssQ0FBQyw4QkFBOEIsRUFBRSxDQUFDLFVBQVUsQ0FBQyxFQUFFLFlBQVksTUFBTSxDQUFDLEtBQUssRUFBRSxDQUFDLENBQUM7YUFDM0Y7U0FDRjtLQUNGO0FBQ0gsQ0FBQyxDQUFBLENBQUM7QUE3QlcsUUFBQSxnQkFBZ0Isb0JBNkIzQiJ9